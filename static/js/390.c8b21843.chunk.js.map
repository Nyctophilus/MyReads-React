{"version":3,"file":"static/js/390.c8b21843.chunk.js","mappings":"kIAgCA,IA9BkB,WAChB,OAAoCA,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAsB,WACtBC,OAAOC,QAAU,GAAIH,GAAc,GAClCA,GAAc,EACpB,EAqBD,OAnBAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,YAAW,WACvBJ,OAAOK,iBACL,SACAN,GAEFO,QAAQC,IAAR,qBACD,GAAE,KAEH,OAAO,WACLP,OAAOQ,oBACL,SACAT,GAGFU,aAAaN,EACd,CACF,GAAE,CAACN,IAEGA,CACR,C,oHCZD,EAhBoB,SAACa,EAAKC,GACxB,OAA4Cf,EAAAA,EAAAA,UAASc,GAArD,eAAOE,EAAP,KAAuBC,EAAvB,KAYA,OAVAX,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,YAAW,WACvBS,EAAkBH,EACnB,GAAEC,GAEH,OAAO,WACLF,aAAaN,EACd,CACF,GAAE,CAACO,EAAKC,IAEFC,CACR,E,SCfD,EAA4B,6BAA5B,EAAwE,gC,SCuCxE,EAhCkB,SAAC,GAAsC,IAApCE,EAAmC,EAAnCA,iBAAkBjB,EAAiB,EAAjBA,WACrC,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOmB,EAAP,KAAcC,EAAd,KACMC,EAAiBC,EAAYH,EAAO,MAE1Cb,EAAAA,EAAAA,YAAU,WACRY,EAAiBG,EAClB,GAAE,CAACA,EAAgBH,IAEpB,IAIMK,EAAmBtB,EAAU,UAC5BuB,EAD4B,YACPA,GACxBA,EAEJ,OACE,iBAAKC,UAAWF,EAAhB,WACE,SAAC,KAAD,CAAMG,GAAG,IAAT,UACE,SAACC,EAAA,EAAD,CAAQC,IAAK,YAEf,kBACEC,KAAK,OACLC,YAAY,mCACZC,MAAOZ,EACPa,SAjBgB,SAACC,GAAD,OAAOb,EAASa,EAAEC,OAAOH,MAAzB,MAsBvB,E,0BCyCD,EArEe,WACb,OAAsC/B,EAAAA,EAAAA,UAAS,IAA/C,eAAOmC,EAAP,KAAoBC,EAApB,KAEQC,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACR3B,QAAQC,IAAI0B,GACZ,OAAsCrC,EAAAA,EAAAA,WAAS,GAA/C,eAAOwC,EAAP,KAAoBC,EAApB,KACA,GAA8BzC,EAAAA,EAAAA,WAAS,GAAvC,eAAO0C,EAAP,KAAgBC,EAAhB,KAEMzB,GAAmB0B,EAAAA,EAAAA,cAAY,SAACzB,GACpCwB,GAAW,GACPxB,IACF0B,EAAAA,EAAAA,IAAO1B,EAAM2B,OAAQ,IAAIC,MAAK,SAACC,GACzBA,EAAKC,OACPb,EAAe,IACfK,GAAe,GACfE,GAAW,KAEXF,GAAe,GACfL,EAAeY,GACfL,GAAW,GAEd,IAEExB,IACHsB,GAAe,GACfL,EAAe,IACfO,GAAW,GAEd,GAAE,IAEHN,EAASa,SAAQ,SAACC,GAAD,OACfA,EAAIC,MAAMF,SAAQ,SAACG,GACjBlB,EAAYe,SAAQ,SAACI,GACfD,EAAKE,KAAOD,EAAIC,KAClBD,EAAIE,MAAQH,EAAKG,MACjB9C,QAAQC,IAAI2C,GAEf,GACF,GARc,IAWjB,IAAMrD,GAAawD,EAAAA,EAAAA,KAInB,OAFA/C,QAAQC,IAAIwB,IAGV,iCACE,SAAC,EAAD,CAAiBjB,iBAAAA,EAAkBjB,WAAAA,KAEnC,iBACEwB,UAAU,YACViC,MAAO,CAAEC,YAAa,cAFxB,UAIGjB,IAAW,SAACkB,EAAA,EAAD,KAEVpB,IAAgBE,IAChB,SAACmB,EAAA,EAAD,CAAaT,MAAOjB,IAGrBK,IAAgBE,IACf,cAAGgB,MAAO,CAAEI,UAAW,UAAvB,+CAOT,C","sources":["hooks/use-scroll.js","hooks/useDebounce.js","webpack://react-temp/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.js","pages/Search.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useScroll = () => {\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n\r\n  const scrollDetectHandler = () => {\r\n    if (window.scrollY > 50) setIsScrolled(true);\r\n    else setIsScrolled(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      window.addEventListener(\r\n        \"scroll\",\r\n        scrollDetectHandler\r\n      );\r\n      console.log(`[EFFECT] Scrolling`);\r\n    }, 500);\r\n\r\n    return () => {\r\n      window.removeEventListener(\r\n        \"scroll\",\r\n        scrollDetectHandler\r\n      );\r\n\r\n      clearTimeout(timer);\r\n    };\r\n  }, [isScrolled]);\r\n\r\n  return isScrolled;\r\n};\r\n\r\nexport default useScroll;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useDebounce = (val, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(val);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebouncedValue(val);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [val, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchBar\":\"SearchBar_SearchBar__0Azw2\",\"bar-scrolled\":\"SearchBar_bar-scrolled__k1u5J\"};","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useDebounce from \"../../hooks/useDebounce\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport classes from \"./SearchBar.module.css\";\r\n\r\nconst SearchBar = ({ getSearchResults, isScrolled }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const debouncedQuery = useDebounce(query, 600);\r\n\r\n  useEffect(() => {\r\n    getSearchResults(debouncedQuery);\r\n  }, [debouncedQuery, getSearchResults]);\r\n\r\n  const searchHandler = (e) => setQuery(e.target.value);\r\n\r\n  //   const clearInputHandler = () => setQuery(\"\");\r\n\r\n  const searchBarClasses = isScrolled\r\n    ? `${classes.SearchBar} ${classes[\"bar-scrolled\"]}`\r\n    : classes.SearchBar;\r\n\r\n  return (\r\n    <div className={searchBarClasses}>\r\n      <Link to=\"/\">\r\n        <Button svg={\"back\"} />\r\n      </Link>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search by title, author, or ISBN\"\r\n        value={query}\r\n        onChange={searchHandler}\r\n        // onBlur={clearInputHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useContext } from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { search } from \"../api/BooksAPI\";\r\nimport Loading from \"../components/Loading/Loading\";\r\nimport SearchBar from \"../components/SearchBar/SearchBar\";\r\nimport Shelf from \"../components/Shelf/Shelf\";\r\nimport BooksContext from \"../hooks/books-context\";\r\nimport useScroll from \"../hooks/use-scroll\";\r\n\r\nconst Search = () => {\r\n  const [searchBooks, setSearchBooks] = useState([]);\r\n\r\n  const { allBooks } = useContext(BooksContext);\r\n  console.log(allBooks);\r\n  const [searchError, setSearchError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getSearchResults = useCallback((query) => {\r\n    setLoading(true);\r\n    if (query)\r\n      search(query.trim(), 10).then((data) => {\r\n        if (data.error) {\r\n          setSearchBooks([]);\r\n          setSearchError(true);\r\n          setLoading(false);\r\n        } else {\r\n          setSearchError(false);\r\n          setSearchBooks(data);\r\n          setLoading(false);\r\n        }\r\n      });\r\n\r\n    if (!query) {\r\n      setSearchError(false);\r\n      setSearchBooks([]);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  allBooks.forEach((cat) =>\r\n    cat.books.forEach((book) => {\r\n      searchBooks.forEach((sBk) => {\r\n        if (book.id === sBk.id) {\r\n          sBk.shelf = book.shelf;\r\n          console.log(sBk);\r\n        }\r\n      });\r\n    })\r\n  );\r\n\r\n  const isScrolled = useScroll();\r\n\r\n  console.log(searchBooks);\r\n\r\n  return (\r\n    <>\r\n      <SearchBar {...{ getSearchResults, isScrolled }} />\r\n\r\n      <div\r\n        className=\"container\"\r\n        style={{ marginBlock: \"10rem 5rem\" }}\r\n      >\r\n        {loading && <Loading />}\r\n\r\n        {!searchError && !loading && (\r\n          <Shelf {...{ books: searchBooks }} />\r\n        )}\r\n\r\n        {searchError && !loading && (\r\n          <p style={{ textAlign: \"center\" }}>\r\n            No Books Found! ðŸ˜Ÿ\r\n          </p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"names":["useState","isScrolled","setIsScrolled","scrollDetectHandler","window","scrollY","useEffect","timer","setTimeout","addEventListener","console","log","removeEventListener","clearTimeout","val","delay","debouncedValue","setDebouncedValue","getSearchResults","query","setQuery","debouncedQuery","useDebounce","searchBarClasses","classes","className","to","Button","svg","type","placeholder","value","onChange","e","target","searchBooks","setSearchBooks","allBooks","useContext","BooksContext","searchError","setSearchError","loading","setLoading","useCallback","search","trim","then","data","error","forEach","cat","books","book","sBk","id","shelf","useScroll","style","marginBlock","Loading","Shelf","textAlign"],"sourceRoot":""}